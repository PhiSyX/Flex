/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string>;

export type UsersAccountStatus = "private" | "public" | "secret";

export type UsersAvatarDisplayFor = "member_only" | "public";

export type UsersRole = "admin" | "moderator" | "netadmin" | "sysadmin" | "user";

export interface Users {
  account_status: Generated<UsersAccountStatus | null>;
  avatar: string | null;
  avatar_display_for: Generated<UsersAvatarDisplayFor | null>;
  birthday: Timestamp | null;
  city: string | null;
  country: string | null;
  created_at: Generated<Timestamp | null>;
  email: string;
  firstname: string | null;
  gender: string | null;
  id: string;
  lastname: string | null;
  name: string;
  password: string;
  role: Generated<UsersRole | null>;
  updated_at: Generated<Timestamp | null>;
}

export interface DB {
  users: Users;
}
