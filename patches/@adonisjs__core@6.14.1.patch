diff --git a/build/modules/ace/codemods.d.ts b/build/modules/ace/codemods.d.ts
index c2d2b9f7dc8b3c10f75b561c8a341d33a716f59f..579dd7734576f38c61f2bc863b407b0b23918c72 100644
--- a/build/modules/ace/codemods.d.ts
+++ b/build/modules/ace/codemods.d.ts
@@ -88,7 +88,7 @@ export declare class Codemods extends EventEmitter {
      * name like :
      *
      * ```
-     * this.installPackages(['@adonisjs/lucid@next', '@adonisjs/auth@3.0.0'])
+     * this.installPackages([{ name: '@adonisjs/lucid@next', isDevDependency: false }])
      * ```
      */
     installPackages(packages: {
diff --git a/build/modules/ace/codemods.js b/build/modules/ace/codemods.js
index 68bcafdf69b96578d1809ddc8a0e394eceb6c056..6aa5ab01042d6ac085b8a6ac63202f9b3f534b61 100644
--- a/build/modules/ace/codemods.js
+++ b/build/modules/ace/codemods.js
@@ -241,7 +241,7 @@ export class Codemods extends EventEmitter {
      * name like :
      *
      * ```
-     * this.installPackages(['@adonisjs/lucid@next', '@adonisjs/auth@3.0.0'])
+     * this.installPackages([{ name: '@adonisjs/lucid@next', isDevDependency: false }])
      * ```
      */
     async installPackages(packages) {
diff --git a/build/modules/http/request_validator.js b/build/modules/http/request_validator.js
index 06064a5fddfd02dc8ed442802b1e28d08c35f6b5..0a00f8fd8bb6459ae2e1df0ffce1bc04b3a9efad 100644
--- a/build/modules/http/request_validator.js
+++ b/build/modules/http/request_validator.js
@@ -56,6 +56,7 @@ export class RequestValidator {
          */
         const data = validatorOptions.data || {
             ...this.#ctx.request.all(),
+            // @ts-expect-error petit problème?
             ...this.#ctx.request.allFiles(),
             params: this.#ctx.request.params(),
             headers: this.#ctx.request.headers(),
diff --git a/build/src/ignitor/http.d.ts b/build/src/ignitor/http.d.ts
index 27bc224ce101a061f2cb801c02d598765926cfc1..0a0d5c68485bca81a46339a00663485f8dfa9b75 100644
--- a/build/src/ignitor/http.d.ts
+++ b/build/src/ignitor/http.d.ts
@@ -1,15 +1,22 @@
-import type { Server as NodeHttpsServer } from 'node:https';
-import { IncomingMessage, ServerResponse, Server as NodeHttpServer } from 'node:http';
+import { type SecureServerOptions, type Http2SecureServer as NodeHttps2Server, type Http2ServerResponse, type Http2ServerRequest } from 'node:http2';
+import type { ServerOptions as HttpsServerOptions, Server as NodeHttpsServer } from 'node:https';
+import type { ServerOptions as HttpServerOptions, IncomingMessage, ServerResponse, Server as NodeHttpServer } from 'node:http';
 import { Ignitor } from './main.js';
+type HttpServer = NodeHttpsServer | NodeHttpServer | NodeHttps2Server;
+type HttpServerRequest = IncomingMessage | Http2ServerRequest;
+type HttpServerResponse = ServerResponse | Http2ServerResponse;
 /**
  * The HTTP server process is used to start the application in the
  * web environment.
  */
 export declare class HttpServerProcess {
     #private;
-    constructor(ignitor: Ignitor);
+    constructor(ignitor: Ignitor, options?: {
+        https: boolean | 2;
+    } & (HttpServerOptions | HttpsServerOptions | SecureServerOptions));
     /**
      * Start the HTTP server by wiring up the application
      */
-    start(serverCallback?: (handler: (req: IncomingMessage, res: ServerResponse) => any) => NodeHttpsServer | NodeHttpServer): Promise<void>;
+    start(serverCallback?: (handler: (req: HttpServerRequest, res: HttpServerResponse) => any) => HttpServer): Promise<void>;
 }
+export {};
diff --git a/build/src/ignitor/http.js b/build/src/ignitor/http.js
index 13245704fcf30edc50be781ad7904a3923693c29..678c99e1f3ea782abcfe10a758149cb8f1fa5e48 100644
--- a/build/src/ignitor/http.js
+++ b/build/src/ignitor/http.js
@@ -6,7 +6,9 @@
  * For the full copyright and license information, please view the LICENSE
  * file that was distributed with this source code.
  */
-import { createServer } from 'node:http';
+import { createSecureServer, } from 'node:http2';
+import { createServer as createHttpsServer } from 'node:https';
+import { createServer as createHttpServer } from 'node:http';
 import debug from '../debug.js';
 /**
  * The HTTP server process is used to start the application in the
@@ -17,8 +19,10 @@ export class HttpServerProcess {
      * Ignitor reference
      */
     #ignitor;
-    constructor(ignitor) {
+    #httpOptions;
+    constructor(ignitor, options) {
         this.#ignitor = ignitor;
+        this.#httpOptions = options;
     }
     /**
      * Calling this method closes the underlying HTTP server
@@ -95,7 +99,13 @@ export class HttpServerProcess {
         /**
          * Method to create the HTTP server
          */
-        const createHTTPServer = serverCallback || createServer;
+        let createHTTPServer = serverCallback || createHttpServer;
+        if (this.#httpOptions?.https === 2) {
+            createHTTPServer = createSecureServer;
+        }
+        else if (this.#httpOptions?.https) {
+            createHTTPServer = createHttpsServer;
+        }
         const app = this.#ignitor.createApp('web');
         await app.init();
         await app.boot();
@@ -109,7 +119,8 @@ export class HttpServerProcess {
              * Create Node.js HTTP server instance and share it with the
              * AdonisJS HTTP server
              */
-            const httpServer = createHTTPServer(server.handle.bind(server));
+            // @ts-expect-error type à corriger
+            const httpServer = createHTTPServer(this.#httpOptions, server.handle.bind(server));
             server.setNodeServer(httpServer);
             const logger = await app.container.make('logger');
             const emitter = await app.container.make('emitter');
diff --git a/build/src/ignitor/main.d.ts b/build/src/ignitor/main.d.ts
index 6b2596de4b2e9d71b0c2f747ab2e9a5547dae721..d0d6dbb5d540978888ff0f4f7ac7929993f501da 100644
--- a/build/src/ignitor/main.d.ts
+++ b/build/src/ignitor/main.d.ts
@@ -1,3 +1,6 @@
+import type { ServerOptions as HttpServerOptions } from 'node:http';
+import type { ServerOptions as HttpsServerOptions } from 'node:https';
+import type { SecureServerOptions } from 'node:http2';
 import { AceProcess } from './ace.js';
 import { TestRunnerProcess } from './test.js';
 import { HttpServerProcess } from './http.js';
@@ -27,7 +30,9 @@ export declare class Ignitor {
     /**
      * Get instance of the HTTPServerProcess
      */
-    httpServer(): HttpServerProcess;
+    httpServer(options?: {
+        https: boolean | 2;
+    } & (HttpServerOptions | HttpsServerOptions | SecureServerOptions)): HttpServerProcess;
     /**
      * Get an instance of the AceProcess class
      */
diff --git a/build/src/ignitor/main.js b/build/src/ignitor/main.js
index bd71182de15adc1fdf6a3b7e8db0b5ed50140eb1..538e62a9d27daca1c848a772ede2e81f702e07cd 100644
--- a/build/src/ignitor/main.js
+++ b/build/src/ignitor/main.js
@@ -76,8 +76,8 @@ export class Ignitor {
     /**
      * Get instance of the HTTPServerProcess
      */
-    httpServer() {
-        return new HttpServerProcess(this);
+    httpServer(options) {
+        return new HttpServerProcess(this, options);
     }
     /**
      * Get an instance of the AceProcess class
